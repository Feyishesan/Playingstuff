<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" 
    xmlns="http://maven.apache.org/POM/4.0.0" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.acme</groupId>
    <artifactId>jni-quickstart</artifactId>
    <version>1.0-SNAPSHOT</version>
    <properties>
        <surefire-plugin.version>2.22.1</surefire-plugin.version>
        <quarkus.version>999-SNAPSHOT</quarkus.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-resteasy</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-junit5</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-bom</artifactId>
                <version>${quarkus.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>

        <plugins>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>native-maven-plugin</artifactId>
                <version>1.0-alpha-11</version>
                <extensions>true</extensions>
                <configuration>

                    <!--
                    <javahOS>linux</javahOS>
                    <javahOS>win33</javahOS>
                    -->

                    <javahOS>${os_name}</javahOS>

                    <!--
                    <This is dealt in generate-header script>
                    <javahOutputDirectory>${project.basedir}/native/include</javahOutputDirectory>
                    <javahClassNames>
                        <javahClassName>com.example.NativeApplication</javahClassName>
                    </javahClassNames>
                    -->

                    <sources>
                        <source>
                            <directory>src/main/native</directory>
                            <fileNames>
                                <fileName>jni.c</fileName>
                            </fileNames>
                        </source>
                        <source>
                            <directory>src/main/native/include</directory>
                        </source>
                    </sources>
                    <compilerProvider>generic-classic</compilerProvider>
                    <compilerExecutable>gcc</compilerExecutable>

                    <compilerStartOptions>
                        <compilerStartOption>-m64</compilerStartOption>
                        <compilerStartOption>-fpic</compilerStartOption>
                        <compilerStartOption>-Wall</compilerStartOption>
                        <compilerStartOption>-Wextra</compilerStartOption>
                        <compilerStartOption>-ansi</compilerStartOption>
                        <compilerStartOption>-g</compilerStartOption>
                        <compilerStartOption>-O3</compilerStartOption>
                        <compilerStartOption>-Wunused-parameter</compilerStartOption>
                    </compilerStartOptions>

                    <linkerOutputDirectory>target</linkerOutputDirectory>
                    <linkerExecutable>gcc</linkerExecutable>

                    <linkerStartOptions>
                        <linkerStartOption>-m64</linkerStartOption>
                        <linkerStartOption>-shared</linkerStartOption>
                    </linkerStartOptions>

                    <linkerFinalName></linkerFinalName>

                    <linkerEndOptions>
                        <linkerEndOption>-o ${project.build.directory}/${lib_name}</linkerEndOption>
                    </linkerEndOptions>
                </configuration>

                <executions>
                    <execution>
                        <id>javah</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>initialize</goal>
                            <goal>compile</goal>
                            <goal>link</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
            </plugin> -->

            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire-plugin.version}</version>
                <configuration>
                    <systemProperties>
                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                    </systemProperties>
                    <forkMode>once</forkMode>
                    <argLine>-Djava.library.path=${project.build.directory}</argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-maven-plugin</artifactId>
                <version>${quarkus.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>

        <profile>
            <id>windows</id>
            <activation>
                <property>
                    <name>platform</name>
                    <value>win</value>
                </property>
            </activation>
            <properties>
                <os_name>win32</os_name>
                <lib_name>jnilibrary.dll</lib_name>
            </properties>

        </profile>

        <profile>
            <id>Linux</id>
            <activation>
                <activeByDefault>true</activeByDefault>
                <property>
                    <name>platform</name>
                    <value>nix</value>
                </property>
            </activation>
            <properties>
                <os_name>linux</os_name>
                <lib_name>libjnilibrary.so</lib_name>
            </properties>
        </profile>

        <profile>
            <id>Mac</id>
            <activation>
                <os>
                    <family>mac</family>
                </os>
            </activation>
            <properties>
                <os_name>darwin</os_name>
                <lib_name>libjnilibrary.dylib</lib_name>
            </properties>
        </profile>

        <profile>
            <id>native</id>
            <activation>
                <property>
                    <name>native</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.quarkus</groupId>
                        <artifactId>quarkus-maven-plugin</artifactId>
                        <version>${quarkus.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>native-image</goal>
                                </goals>
                                <configuration>
                                    <enableHttpUrlHandler>true</enableHttpUrlHandler>
                                    <enableJni>true</enableJni>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${surefire-plugin.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                                <configuration>
                                    <systemProperties>
                                        <native.image.path>${project.build.directory}/${project.artifactId}-runner</native.image.path>
                                        <argLine>-Djava.library.path=${project.build.directory}</argLine>
                                    </systemProperties>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
